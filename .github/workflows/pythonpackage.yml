name: Testing nbclassic

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.13'
      - name: Lint with Pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@d5b08e36724fe4271b4751cc0d84c80c2e5c982c # v1
      - name: Install pip dependencies
        run: |
          pip install -v -e ".[test]" pytest-cov
      - name: Check pip environment
        run: |
          pip freeze
          pip check
      - name: Run the help command
        run: |
          jupyter nbclassic -h
      - name: Test with pytest and coverage
        run: |
          python -m pytest -vv --cov=nbclassic --cov-report term-missing:skip-covered || python -m pytest -vv --cov=nbclassic --cov-report term-missing:skip-covered
      - name: Test Running Server
        if: startsWith(runner.os, 'Linux')
        run: |
          jupyter nbclassic --no-browser &
          TASK_PID=$!
          # Make sure the task is running
          ps -p $TASK_PID || exit 1
          sleep 5
          kill $TASK_PID
          wait $TASK_PID

#  test_miniumum_versions:
#    name: Test Minimum Versions
#    timeout-minutes: 20
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
#      - name: Base Setup
#        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@d5b08e36724fe4271b4751cc0d84c80c2e5c982c # v1
#        with:
#          python_version: "3.8"
#      - name: Install minimum versions
#        uses: jupyterlab/maintainer-tools/.github/actions/install-minimums@v1
#      - name: Run the unit tests
#        run: pytest -vv || pytest -vv --lf

  test_prereleases:
    name: Test Prereleases
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@d5b08e36724fe4271b4751cc0d84c80c2e5c982c # v1
      - name: Install the Python dependencies
        run: |
          pip install --pre -e ".[test]"
      - name: List installed packages
        run: |
          pip freeze
          pip check
      - name: Run the tests
        run: |
          pytest -vv || pytest -vv --lf

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@d5b08e36724fe4271b4751cc0d84c80c2e5c982c # v1
      - name: Build SDist
        run: |
          pip install build
          python -m build --sdist
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: "sdist"
          path: dist/*.tar.gz

  test_sdist:
    runs-on: ubuntu-latest
    needs: [make_sdist]
    name: Install from SDist and Test
    timeout-minutes: 20
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@d5b08e36724fe4271b4751cc0d84c80c2e5c982c # v1
      - name: Download sdist
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      - name: Install From SDist
        run: |
          set -ex
          cd sdist
          mkdir test
          tar --strip-components=1 -zxvf *.tar.gz -C ./test
          cd test
          pip install -e .[test]
          pip install pytest-github-actions-annotate-failures
      - name: Run Test
        run: |
          cd sdist/test
          pytest -vv || pytest -vv --lf
